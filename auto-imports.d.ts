/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('@nuxtjs/composition-api')['defineComponent']
  const defineNuxtMiddleware: typeof import('@nuxtjs/composition-api')['defineNuxtMiddleware']
  const defineNuxtPlugin: typeof import('@nuxtjs/composition-api')['defineNuxtPlugin']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const globalPlugin: typeof import('@nuxtjs/composition-api')['globalPlugin']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onGlobalSetup: typeof import('@nuxtjs/composition-api')['onGlobalSetup']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const reqRef: typeof import('@nuxtjs/composition-api')['reqRef']
  const reqSsrRef: typeof import('@nuxtjs/composition-api')['reqSsrRef']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setMetaPlugin: typeof import('@nuxtjs/composition-api')['setMetaPlugin']
  const setSSRContext: typeof import('@nuxtjs/composition-api')['setSSRContext']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const shallowSsrRef: typeof import('@nuxtjs/composition-api')['shallowSsrRef']
  const ssrPromise: typeof import('@nuxtjs/composition-api')['ssrPromise']
  const ssrRef: typeof import('@nuxtjs/composition-api')['ssrRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAsync: typeof import('@nuxtjs/composition-api')['useAsync']
  const useAttrs: typeof import('vue')['useAttrs']
  const useContext: typeof import('@nuxtjs/composition-api')['useContext']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useFetch: typeof import('@nuxtjs/composition-api')['useFetch']
  const useMeta: typeof import('@nuxtjs/composition-api')['useMeta']
  const useRoute: typeof import('@nuxtjs/composition-api')['useRoute']
  const useRouter: typeof import('@nuxtjs/composition-api')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useStatic: typeof import('@nuxtjs/composition-api')['useStatic']
  const useStore: typeof import('@nuxtjs/composition-api')['useStore']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const withContext: typeof import('@nuxtjs/composition-api')['withContext']
  const wrapProperty: typeof import('@nuxtjs/composition-api')['wrapProperty']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('@nuxtjs/composition-api')['defineComponent']>
    readonly defineNuxtMiddleware: UnwrapRef<typeof import('@nuxtjs/composition-api')['defineNuxtMiddleware']>
    readonly defineNuxtPlugin: UnwrapRef<typeof import('@nuxtjs/composition-api')['defineNuxtPlugin']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly globalPlugin: UnwrapRef<typeof import('@nuxtjs/composition-api')['globalPlugin']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onGlobalSetup: UnwrapRef<typeof import('@nuxtjs/composition-api')['onGlobalSetup']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly reqRef: UnwrapRef<typeof import('@nuxtjs/composition-api')['reqRef']>
    readonly reqSsrRef: UnwrapRef<typeof import('@nuxtjs/composition-api')['reqSsrRef']>
    readonly setMetaPlugin: UnwrapRef<typeof import('@nuxtjs/composition-api')['setMetaPlugin']>
    readonly setSSRContext: UnwrapRef<typeof import('@nuxtjs/composition-api')['setSSRContext']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly shallowSsrRef: UnwrapRef<typeof import('@nuxtjs/composition-api')['shallowSsrRef']>
    readonly ssrPromise: UnwrapRef<typeof import('@nuxtjs/composition-api')['ssrPromise']>
    readonly ssrRef: UnwrapRef<typeof import('@nuxtjs/composition-api')['ssrRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAsync: UnwrapRef<typeof import('@nuxtjs/composition-api')['useAsync']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useContext: UnwrapRef<typeof import('@nuxtjs/composition-api')['useContext']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useFetch: UnwrapRef<typeof import('@nuxtjs/composition-api')['useFetch']>
    readonly useMeta: UnwrapRef<typeof import('@nuxtjs/composition-api')['useMeta']>
    readonly useRoute: UnwrapRef<typeof import('@nuxtjs/composition-api')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('@nuxtjs/composition-api')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useStatic: UnwrapRef<typeof import('@nuxtjs/composition-api')['useStatic']>
    readonly useStore: UnwrapRef<typeof import('@nuxtjs/composition-api')['useStore']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
    readonly withContext: UnwrapRef<typeof import('@nuxtjs/composition-api')['withContext']>
    readonly wrapProperty: UnwrapRef<typeof import('@nuxtjs/composition-api')['wrapProperty']>
  }
}
declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('@nuxtjs/composition-api')['defineComponent']>
    readonly defineNuxtMiddleware: UnwrapRef<typeof import('@nuxtjs/composition-api')['defineNuxtMiddleware']>
    readonly defineNuxtPlugin: UnwrapRef<typeof import('@nuxtjs/composition-api')['defineNuxtPlugin']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly globalPlugin: UnwrapRef<typeof import('@nuxtjs/composition-api')['globalPlugin']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onGlobalSetup: UnwrapRef<typeof import('@nuxtjs/composition-api')['onGlobalSetup']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly reqRef: UnwrapRef<typeof import('@nuxtjs/composition-api')['reqRef']>
    readonly reqSsrRef: UnwrapRef<typeof import('@nuxtjs/composition-api')['reqSsrRef']>
    readonly setMetaPlugin: UnwrapRef<typeof import('@nuxtjs/composition-api')['setMetaPlugin']>
    readonly setSSRContext: UnwrapRef<typeof import('@nuxtjs/composition-api')['setSSRContext']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly shallowSsrRef: UnwrapRef<typeof import('@nuxtjs/composition-api')['shallowSsrRef']>
    readonly ssrPromise: UnwrapRef<typeof import('@nuxtjs/composition-api')['ssrPromise']>
    readonly ssrRef: UnwrapRef<typeof import('@nuxtjs/composition-api')['ssrRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAsync: UnwrapRef<typeof import('@nuxtjs/composition-api')['useAsync']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useContext: UnwrapRef<typeof import('@nuxtjs/composition-api')['useContext']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useFetch: UnwrapRef<typeof import('@nuxtjs/composition-api')['useFetch']>
    readonly useMeta: UnwrapRef<typeof import('@nuxtjs/composition-api')['useMeta']>
    readonly useRoute: UnwrapRef<typeof import('@nuxtjs/composition-api')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('@nuxtjs/composition-api')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useStatic: UnwrapRef<typeof import('@nuxtjs/composition-api')['useStatic']>
    readonly useStore: UnwrapRef<typeof import('@nuxtjs/composition-api')['useStore']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
    readonly withContext: UnwrapRef<typeof import('@nuxtjs/composition-api')['withContext']>
    readonly wrapProperty: UnwrapRef<typeof import('@nuxtjs/composition-api')['wrapProperty']>
  }
}
